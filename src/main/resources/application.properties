server.port=8090

# html
spring.thymeleaf.prefix=classpath:templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.cache=false

# incoding
server.servlet.encoding.force=true

# postgre
#spring.datasource.driverClassName=oracle.postgresql.Driver
spring.datasource.username=postgres
spring.datasource.password=1234
#spring.datasource.url=jdbc:postgresql://34.64.44.45:5432/postgres
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.hikari.maximum-pool-size=4
#spring.datasource.platform=postgres

# session
spring.thymeleaf.servlet.expose-session-attribute=true

#spring.datasource.sql-script-encoding=utf-8
#spring.main.allow-bean-definition-overriding=true

#spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
#spring.jpa.properties.hibernate.id.new_generator_mappings=false
#spring.jpa.properties.hibernate.format_sql=true
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#spring.jpa.hibernate.ddl-auto=create

# jpa
spring.jpa.hibernate.dialect=org.hibernate.dialect.PostgreSQL10Dialect
spring.jpa.hibernate.ddl-auto=none
# 가독성 향상을 위한 sql Formatting
spring.jpa.properties.hibernate.format_sql=true
# 콘솔에 쿼리문 출력
spring.jpa.show_sql=true
#value의 값이 어떤 값이 들어가는지 알려준다.
logging.level.org.hibernate.type.descriptor.sql = trace